# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-07-23 00:39
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='M_EMP',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('emp_num', models.IntegerField(primary_key=True, serialize=False, unique=True, validators=[django.core.validators.MaxValueValidator(99999), django.core.validators.MinValueValidator(1)], verbose_name='emp num')),
                ('email_address', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('emp_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='emp name')),
                ('admin_flag', models.CharField(default=0, max_length=1, verbose_name='admin flag')),
                ('regist_emp_num', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(99999), django.core.validators.MinValueValidator(1)], verbose_name='regist emp num')),
                ('update_emp_num', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(99999), django.core.validators.MinValueValidator(1)], verbose_name='update emp num')),
                ('regist_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='regist time')),
                ('update_time', models.DateField(default=django.utils.timezone.now, verbose_name='update time')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'm_emp',
            },
        ),
        migrations.CreateModel(
            name='Book_Tag',
            fields=[
                ('tag_id', models.AutoField(primary_key=True, serialize=False)),
                ('isbn', models.CharField(default='', max_length=15)),
                ('regist_emp_num', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(99999), django.core.validators.MinValueValidator(1)])),
                ('update_emp_num', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(99999), django.core.validators.MinValueValidator(1)])),
                ('regist_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('update_time', models.DateField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'book_tag',
            },
        ),
        migrations.CreateModel(
            name='Lend',
            fields=[
                ('lend_id', models.AutoField(primary_key=True, serialize=False)),
                ('book_stock_id', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(99999), django.core.validators.MinValueValidator(1)])),
                ('emp_num', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(99999), django.core.validators.MinValueValidator(1)])),
                ('owner_emp_num', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(99999), django.core.validators.MinValueValidator(1)])),
                ('lend_date', models.DateField()),
                ('return_due_date', models.DateField()),
                ('return_date', models.DateField()),
                ('regist_emp_num', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(99999), django.core.validators.MinValueValidator(1)])),
                ('update_emp_num', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(99999), django.core.validators.MinValueValidator(1)])),
                ('regist_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('update_time', models.DateField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'lend',
            },
        ),
        migrations.CreateModel(
            name='M_Book',
            fields=[
                ('isbn', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('book_name', models.CharField(max_length=200)),
                ('author', models.CharField(max_length=200)),
                ('publish_date', models.DateField()),
                ('publisher', models.CharField(max_length=200)),
                ('content', models.CharField(max_length=200)),
                ('regist_emp_num', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(99999), django.core.validators.MinValueValidator(1)])),
                ('update_emp_num', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(99999), django.core.validators.MinValueValidator(1)])),
                ('regist_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('update_time', models.DateField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'm_book',
            },
        ),
        migrations.CreateModel(
            name='M_Book_Stock',
            fields=[
                ('book_stock_id', models.AutoField(primary_key=True, serialize=False)),
                ('isbn', models.CharField(max_length=15)),
                ('owner_emp_emp_num', models.IntegerField(default=9999, validators=[django.core.validators.MaxValueValidator(99999), django.core.validators.MinValueValidator(1)])),
                ('review', models.CharField(max_length=200)),
                ('regist_emp_num', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(99999), django.core.validators.MinValueValidator(1)])),
                ('update_emp_num', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(99999), django.core.validators.MinValueValidator(1)])),
                ('regist_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('update_time', models.DateField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'm_book_stock',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('isbn', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('emp_num', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(99999), django.core.validators.MinValueValidator(1)])),
                ('review', models.CharField(max_length=200)),
                ('regist_emp_num', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(99999), django.core.validators.MinValueValidator(1)])),
                ('update_emp_num', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(99999), django.core.validators.MinValueValidator(1)])),
                ('regist_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('update_time', models.DateField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'review',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('tag_id', models.AutoField(primary_key=True, serialize=False)),
                ('tag', models.CharField(max_length=100)),
                ('regist_emp_num', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(99999), django.core.validators.MinValueValidator(1)])),
                ('update_emp_num', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(99999), django.core.validators.MinValueValidator(1)])),
                ('regist_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('update_time', models.DateField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'tag',
            },
        ),
        migrations.AlterUniqueTogether(
            name='review',
            unique_together=set([('isbn', 'emp_num')]),
        ),
        migrations.AlterUniqueTogether(
            name='book_tag',
            unique_together=set([('tag_id', 'isbn')]),
        ),
    ]
